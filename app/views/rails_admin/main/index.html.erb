<% query = params[:query]
	params = request.params.except(:authenticity_token, :action, :controller, :utf8, :bulk_export, :_pjax)
	params.delete(:query) if params[:query].blank?
	params.delete(:sort_reverse) unless params[:sort_reverse] == 'true'
	sort_reverse = params[:sort_reverse]
	sort = params[:sort]
	params.delete(:sort) if params[:sort] == @model_config.list.sort_by.to_s
	export_action = RailsAdmin::Config::Actions.find(:export, { controller: self.controller, abstract_model: @abstract_model })
	export_action = nil unless export_action && authorized?(export_action.authorization_key, @abstract_model)
	description = RailsAdmin.config(@abstract_model.model_name).description
	properties = @model_config.list.with(controller: self.controller, view: self, object: @abstract_model.model.new).visible_fields
	# columns paginate
	sets = get_column_sets(properties)
	properties = sets[params[:set].to_i] || []
	other_left = ((params[:set].to_i - 1) >= 0) && sets[params[:set].to_i - 1].present?
	other_right = sets[params[:set].to_i + 1].present? %>
<% content_for :contextual_tabs do %>
	<%= bulk_menu %>
	<% if filterable_fields.present? %>
		<li class="dropdown" style="float:right">
			<a class="dropdown-toggle" data-toggle="dropdown" href="#">
				<%= t('admin.misc.add_filter') %>
				<b class="caret"></b>
			</a>
			<ul class="dropdown-menu" id="filters" style="left:auto; right:0;">
				<% filterable_fields.each do |field| %>
					<% field_options = case field.type %>
				<% when :enum %>
						<% options_for_select(field.with(object: @abstract_model.model.new).enum) %>
					<% else %>
						<% '' %>
						<li>
							<a href="#" data-field-datetimepicker-format="<%#= field.try(:parser && field.parser.to_momentjs) %>" data-field-label="<%= field.label %>" data-field-name="<%= field.name %>" data-field-options="<%= field_options %>" data-field-type="<%= field.type %>" data-field-value=""><%= capitalize_first_letter(field.label) %></a>
						</li>
					<% end %>
				<% end %>
			</ul>
		</li>
	<% end %>
<% end %>

<script>
    jQuery(function($) {
        <%= escape_javascript(ordered_filter_string) %>
    });
</script>
<style>
	<% properties.select{ |p| p.column_width.present? }.each do |property| %>
	<%= "#list th.#{property.css_class} { width: #{property.column_width}px; min-width: #{property.column_width}px; }" %>
	<%= "#list td.#{property.css_class} { max-width: #{property.column_width}px; }" %>
	<% end %>
</style>

<div id="list">
	<%= form_tag(index_path(params.except(*%w[page f query])), method: :get, class: "pjax-form form-inline") do %>
		<div class="row">
			<div class="col-md-9">
				<span id="filters_box"></span>
				<hr class="filters_box" style="display:<%= ordered_filters.empty? ? 'none' : 'block' %>"/>
				<div class="form-group">
					<input class="form-control" name="query" placeholder="<%= t("admin.misc.filter") %>" type="search" value="<%= query %>">
					<span class="btn-group">
						<button class="btn btn-success" data-disable-with="<%= "<i class='icon-white icon-refresh'></i> ".html_safe %>" type="submit">
							<i class="icon icon-refresh"></i>
						</button>
						<button class="btn btn-danger" id="remove_filter" title="Reset filters">
							<i class="icon icon-remove"></i>
						</button>
					</span>
				</div>
			</div>
			<% if export_action %>
				<div class="col-md-3">
					<%= link_to wording_for(:link, export_action), export_path(params.except('set').except('page')), class: 'btn btn-info' %>
				</div>
			<% end %>
		</div>
	<% end %>
	<% unless @model_config.list.scopes.empty? %>
		<ul class="nav nav-tabs" id="scope_selector">
			<% @model_config.list.scopes.each_with_index do |scope, index| %>
				<% scope = '_all' if scope.nil? %>
			<% end %>
			<li class="<%= 'active' if scope.to_s == params[:scope] || (params[:scope].blank? && index == 0) %>">
				<a class="pjax" href="<%= index_path(params.merge(scope: scope, page: nil)) %>">
					<%= I18n.t("admin.scopes.#{@abstract_model.to_param}.#{scope}", default: I18n.t("admin.scopes.#{scope}", default: scope.to_s.titleize)) %>
				</a>
			</li>
		</ul>
	<% end %>
	<%= form_tag bulk_action_path(model_name: @abstract_model.to_param), method: :post, id: "bulk_form", class: "form" do %>
		<%= hidden_field_tag :bulk_action %>
		<% if description.present? %>
			<p>
				<strong>
					<%= description %>
				</strong>
			</p>
		<% end %>
		<table class="table">
			<thead class="text-primary">
				<tr>
					<th class="shrink">
						<div class="checkbox">
							<label for="checkbox">
								<input class="toggle" type="checkbox">
							</label>
						</div>
					</th>
					<% if other_left %>
						<th class="other left shrink">
							<%= "..." %>
						</th>
					<% end %>
					<% properties.each do |property| %>
						<% selected = (sort == property.name.to_s) %>
						<% if property.sortable %>
							<% sort_location = index_path params.except('sort_reverse').except('page').merge(sort: property.name).merge(selected && sort_reverse != "true" ? {sort_reverse: "true"} : {}) %>
							<% sort_direction = (sort_reverse == 'true' ? "headerSortUp" : "headerSortDown" if selected) %>
						<% end %>
						<th class="<%= property.sortable && 'header pjax' || nil %> <%= sort_direction if property.sortable && sort_direction %> <%= property.css_class %> <%= property.type_css_class %>" data-href="<%= (property.sortable && sort_location) %>" rel="tooltip" title="<%= property.hint %>">
							<%= capitalize_first_letter(property.label) %>
						</th>
					<% end %>
					<% if other_right %>
						<th class="other right shrink">
							<%= "..." %>
						</th>
					<% end %>
					<th class="last shrink"></th>
				</tr>
			</thead>
			<tbody>
			<% @objects.each do |object| %>
				<tr class="<%= @abstract_model.param_key %>_row">
					<td>
						<%= check_box_tag "bulk_ids[]", object.id, false %>
					</td>
					<% if @other_left_link ||= other_left && index_path(params.except('set').merge(params[:set].to_i != 1 ? {set: (params[:set].to_i - 1)} : {})) %>
						<td class="other left">
							<%= link_to "...", @other_left_link, class: 'pjax' %>
						</td>
					<% end %>
					<% properties.map{ |property| property.bind(:object, object) }.each do |property| %>
						<% value = property.pretty_value %>
						<td class="<%= property.css_class %> <%= property.type_css_class %>" title="<%= strip_tags(value.to_s) %>">
							<%= value %>
						</td>
					<% end %>
					<% if @other_right_link ||= other_right && index_path(params.merge(set: (params[:set].to_i + 1))) %>
						<td class="other right">
							<%= link_to "...", @other_right_link, class: 'pjax' %>
						</td>
					<% end %>
					<td class="last links">
						<ul class="inline list-inline">
							<%= menu_for :member, @abstract_model, object, true %>
						</ul>
					</td>
				</tr>
			<% end %>
			</tbody>
		</table>
		<% if @objects.respond_to?(:total_count) %>
			<% total_count = @objects.total_count.to_i %>
			<div class="row">
				<div class="col-md-6">
					<%= paginate(@objects, theme: 'ra-twitter-bootstrap', remote: true) %>
				</div>
			</div>
			<div class="row">
				<div class="col-md-6">
					<%= link_to(t("admin.misc.show_all"), index_path(params.merge(all: true)), class: "show-all btn btn-default clearfix pjax") unless total_count > 100 || total_count <= @objects.to_a.size %>
				</div>
			</div>
			<div class="clearfix total-count">
				<%= "#{total_count} #{@model_config.pluralize(total_count).downcase}" %>
			</div>
		<% end %>
	<% end %>
</div>